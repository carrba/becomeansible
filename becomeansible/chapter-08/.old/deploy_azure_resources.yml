---
  - hosts: localhost
    connection: local

    tasks:

      - name: create resource group
        azure_rm_resourcegroup:
          name: ansible
          location: eastus

      - pause:
          prompt: "Enter password"
          echo: no
        when: password is undefined
        register: password_input

      - set_fact:
          password: "{{ password_input.user_input }}"
        when: password is undefined

      - name: deploy azure windows vm
        block:

          - name: Windows - Create virtual network
            azure_rm_virtualnetwork:
              resource_group: ansible
              name: vnet-winweb
              address_prefixes: "10.0.0.0/16"

          - name: Windows - Add subnet
            azure_rm_subnet:
              resource_group: ansible
              name: snet-winweb
              address_prefix: "10.0.1.0/24"
              virtual_network: vnet-winweb

          - name: Windows - Create public IP address
            azure_rm_publicipaddress:
              resource_group: ansible
              allocation_method: Static
              domain_name: vm-winweb001
              name: pip-winweb
            register: output_ip_address

          - name: Output public IP
            debug:
              msg: "The public IP is {{ output_ip_address.state.ip_address }}"

          - name: Windows - Create Network Security Group
            azure_rm_securitygroup:
              resource_group: ansible
              name: nsg-winweb
              rules:
                - name: 'allow_rdp'
                  protocol: Tcp
                  destination_port_range: 3389
                  access: Allow
                  priority: 1001
                  direction: Inbound
                - name: 'allow_web_traffic'
                  protocol: Tcp
                  destination_port_range:
                    - 80
                    - 443
                  access: Allow
                  priority: 1002
                  direction: Inbound
                - name: 'allow_powershell_remoting'
                  protocol: Tcp
                  destination_port_range:
                    - 5985
                    - 5986
                  access: Allow
                  priority: 1003
                  direction: Inbound

          - name: Windows - Create a network interface
            azure_rm_networkinterface:
              name: nic-winweb
              resource_group: ansible
              virtual_network: vnet-winweb
              subnet_name: snet-winweb
              security_group: nsg-winweb
              ip_configurations:
                - name: default
                  public_ip_address_name: pip-winweb
                  primary: True

          - name: Windows - Create VM
            azure_rm_virtualmachine:
              resource_group: ansible
              name: vm-winweb01
              vm_size: Standard_DS1_v2
              admin_username: ansible
              admin_password: "{{ password }}"
              network_interfaces: nic-winweb
              os_type: Windows
              image:
                offer: WindowsServer
                publisher: MicrosoftWindowsServer
                sku: 2019-Datacenter
                version: latest

          - name: Windows - create Azure vm extension to enable HTTPS WinRM listener
            azure_rm_virtualmachineextension:
              name: winrm-extension
              resource_group: ansible
              virtual_machine_name: vm-winweb01
              publisher: Microsoft.Compute
              virtual_machine_extension_type: CustomScriptExtension
              type_handler_version: '1.10'
              settings: '{"fileUris": ["https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"],"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ConfigureRemotingForAnsible.ps1"}'
              auto_upgrade_minor_version: true

          - name: Windows - Get facts for one Public IP
            azure_rm_publicipaddress_info:
              resource_group: ansible
              name: pip-winweb
            register: publicipaddresses

          - name: Windows - set public ip address fact
            set_fact: publicipaddress="{{ publicipaddresses | json_query('publicipaddresses[0].ip_address')}}"

          - name: Windows - wait for the WinRM port to come online
            wait_for:
              port: 5986
              host: '{{ publicipaddress }}'
              timeout: 600

          - name: deploy azure linux vm
            block:

            - name: 'Linux - Create virtual network'
              azure_rm_virtualnetwork:
                resource_group: ansible
                name: vnet-linux
                address_prefixes: "10.0.0.0/16"
      
            - name: 'Linux - Add subnet'
              azure_rm_subnet:
                resource_group: ansible
                name: snet-linux
                address_prefix: "10.0.1.0/24"
                virtual_network: vnet-linux
        
            - name: 'Linux - Create public IP address'
              azure_rm_publicipaddress:
                resource_group: ansible
                allocation_method: Static
                domain_name: vm-linuxweb001
                name: pip-linux
              register: output_ip_address
        
            - name: Output public IP
              debug:
                msg: "The public IP is {{ output_ip_address.state.ip_address }}"
      
            - name: 'Linux - Create Network Security Group'
              azure_rm_securitygroup:
                resource_group: ansible
                name: nsg-linux
                rules:
                  - name: SSH
                    protocol: Tcp
                    destination_port_range: 22
                    access: Allow
                    priority: 1001
                    direction: Inbound
                  - name: 'allow_web_traffic'
                    protocol: Tcp
                    destination_port_range:
                      - 80
                      - 443
                    access: Allow
                    priority: 1002
                    direction: Inbound
        
            - name: 'Linux - Create virtual network interface card'
              azure_rm_networkinterface:
                resource_group: ansible
                name: nic-linux
                virtual_network: vnet-linux
                subnet: snet-linux
                public_ip_name: pip-linux
                security_group: nsg-linux
      
            - name: 'Linux - Create VM'
              azure_rm_virtualmachine:
                resource_group: ansible
                name: vm-linuxweb
                vm_size: Standard_DS1_v2
                admin_username: ansible
                admin_password: "{{ password }}"
                ssh_password_enabled: true
                network_interfaces: nic-linux
                #custom_data: "{{ lookup('file', 'cloud-init.yml') }}"
                image:
                  offer: CentOS
                  publisher: OpenLogic
                  sku: '8.0'
                  version: latest
        
            - name: Linux - update sudoers
              azure_rm_virtualmachineextension:
                name: update-sudoers
                resource_group: ansible
                virtual_machine_name: vm-linuxweb
                publisher: Microsoft.Azure.Extensions
                virtual_machine_extension_type: CustomScript
                type_handler_version: '2.0'
                settings: '{"fileUris": ["https://raw.githubusercontent.com/Duffney/becomeansible/master/chapter-03/azure/update-sudoers.sh"],"commandToExecute": "bash update-sudoers.sh"}'
                auto_upgrade_minor_version: true